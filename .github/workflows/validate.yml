name: Validate

on:
  pull_request:

jobs:
  validate:
    name: Validate code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install
        run: |
          npm ci

      - name: Build
        run: |
          npm run build

      - name: Changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: '**/*.yaml'

      - name: Validate changed files
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          for file in ${CHANGED_FILES}; do
            node ./build/validate.js $file
          done
          echo 'Downloads:'
          ls ./test/downloads/ || true

      - name: VirusTotal Scan
        id: virustotal
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          request_rate: 4
          files: ./test/downloads/**/*

      - name: VirusTotal Report
        uses: actions/github-script@v7
        with:
          script: |
            const analysis = '${{steps.virustotal.outputs.analysis}}';
            if (!analysis) return;
            let output = 'VirusTotal Report:\n';
            let lines = analysis.split(',');
            for (let line of lines) {
              output += '- [' + line.replace('./test/downloads/', '').replace('=https', '](https') + ')\n';
            }
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            });
            const existingComment = comments.find(comment => comment.user.id === 41898282);
            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: output
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.number,
                body: output
              });
            }
